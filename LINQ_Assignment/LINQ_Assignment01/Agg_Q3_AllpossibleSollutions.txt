// ===================================================================
// LINQ Solution (Recommended)

// Group products by category and count the products in each category
var categoryCounts = ProductsList
    .GroupBy(p => p.Category)
    .Select(group => new
    {
        CategoryName = group.Key,
        ProductCount = group.Count()
    })
    .ToList();

// Print the results
foreach (var categoryCount in categoryCounts)
{
    Console.WriteLine($"CategoryName: {categoryCount.CategoryName}, ProductCount: {categoryCount.ProductCount}");
}


///=======================================================================
// Generated By ChatGpt

public class CategoryCount
{
    public string CategoryName { get; set; }
    public int ProductCount { get; set; }
}

var categoryCounts = new List<CategoryCount>();

foreach (var product in ProductsList)
{
    var category = categoryCounts.FirstOrDefault(c => c.CategoryName == product.Category);

    if (category == null)
    {
        categoryCounts.Add(new CategoryCount
        {
            CategoryName = product.Category,
            ProductCount = 1
        });
    }
    else
    {
        category.ProductCount++;
    }
}

foreach (var categoryCount in categoryCounts)
{
    Console.WriteLine($"CategoryName: {categoryCount.CategoryName}, ProductCount: {categoryCount.ProductCount}");
}


//==============================================================

// My Original Solution (Too Complicated)

            HashSet<string> categNamesSet = ProductsList.Select(P => P.Category).ToHashSet();
            List<string> categNames = ProductsList.Select(P => P.Category).ToList();


            Dictionary<string, int> categWithCountProd = new Dictionary<string, int>(categNamesSet.Count);

            for(int i = 0; i < ProductsList.Count; i++)
            {
                if (categNamesSet.Contains(categNames[i]))
                {
                   if(! categWithCountProd.TryAdd(categNames[i], 1))
                     categWithCountProd[categNames[i]] += 1;
                }
            }

            foreach (var KV in categWithCountProd) Console.WriteLine($"CategoryName: {KV.Key}, ProductCount: {KV.Value}");



//=======================================================================


// Same as My Approch But More Simple And Effiecient

            Dictionary<string, int> categoryCounts = new Dictionary<string, int>();

            foreach (var product in ProductsList)
            {
                if (categoryCounts.ContainsKey(product.Category))
                {
                    categoryCounts[product.Category]++;
                }
                else
                {
                    categoryCounts[product.Category] = 1;
                }
            }

            // Print the results
            foreach (var kvp in categoryCounts)
            {
                Console.WriteLine($"CategoryName: {kvp.Key}, ProductCount: {kvp.Value}");
            }



